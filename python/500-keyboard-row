class Solution1(object):
    def findWords(self, words):
        """
        :type words: List[str]
        :rtype: List[str]
        """
        tab = {'a':2,'b':3,'c':3,'d':2,'e':1,'f':2,'g':2,'h':2,'i':1,'j':2,'k':2,'l':2,'m':3,'n':3,'o':1,'p':1,'q':1,'r':1,'s':2,'t':1,'u':1,'v':3,'w':1,'x':3,'y':1,'z':3}
        res = []
        for w in words:
            lw = w.lower()
            key = [tab[k] for k in lw]
            if len(set(key)) == 1:
                res.append(w)
        return res

# another way using set()
class Solution2(object):
    def findWords(self, words):
        """
        :type words: List[str]
        :rtype: List[str]
        """
        tab = [set('qwertyuiop'),set('asdfghjkl'),set('zxcvbnm')]
        res = []
        for w in words:
            lw = set(w.lower())
            for line in tab:
                if lw.issubset(line):
                    res.append(w)
                    break
        return res
